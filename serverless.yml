# NOTE: For local development only
# NOTE: All AWS resources are deployed using CDK

service: cdk-workshop-local

plugins:
  - serverless-dynamodb-local
  - serverless-s3-local
  - serverless-offline

provider:
  name: aws
  runtime: nodejs10.x
  region: eu-west-1
  stage: local
  environment:
    AWS_ACCESS_KEY_ID: 'local_id'
    AWS_SECRET_ACCESS_KEY: 'local_secret'
    S3_ENDPOINT: 'http://localhost:9000'
    DYNAMODB_ENDPOINT: 'http://localhost:8000'
    IMAGE_BUCKET: ImageBucketLocal
    PIN_TABLE: PinLocal
    TEMP_DIR: '.local/tmp'

custom:
  serverless-offline:
    port: 4000
  dynamodb:
    stages:
      - local
    start:
      port: 8000
      dbPath: .local/dynamo
      sharedDb: true
      migrate: true
  s3:
    host: 0.0.0.0
    port: 9000
    directory: .local/s3

resources:
  Resources:
    imageBucketLocal:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.IMAGE_BUCKET}
    pinTableLocal:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.PIN_TABLE}
        AttributeDefinitions:
          - AttributeName: pointUrl
            AttributeType: S
        KeySchema:
          - AttributeName: pointUrl
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    pinTopicLocal:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: PinTopic
        DisplayName: 'Pin topic'
functions:
  hello:
    handler: 'dist/api/hello-lambda.handler'
    events:
      - http:
          method: get
          path: /hello
          cors: true

  pin:
    handler: 'dist/api/pin-lambda.handler'
    events:
      - http:
          method: any
          path: /pin
          cors: true
      - http:
          method: any
          path: /pin/{pointUrl}
          cors: true

  thumbnail:
    handler: 'dist/api/thumbnail-lambda.handler'
    events:
      - s3:
          bucket: ${self:provider.environment.IMAGE_BUCKET}
          event: s3:ObjectCreated:*
          rules:
            - prefix: original
  pin-socket:
    handler: 'dist/pin-socket.handler'
    events:
      - stream:
        type: dynamodb
        arn:
          Fn::GetAtt: [pinTableLocal, StreamArn]
